#!/bin/bash
# Versioner
# Git versioning and tagging without the hassle
# brian@theconnman.com
# Version 0.0.1

usage() {
	echo "Usage: versioner [-v version] [-m message]"
	echo "       versioner -h for help."
	exit
}

showhelp() {
	echo "Usage: versioner: [-r root] [-d dist] [-kwv]"
	echo "Versioner: Git versioning and tagging without the hassle"
	echo "  -v: version number"
	echo "  -m: tag message"
	echo "  -h: this help message"
	exit
}

# Initialize variables and define defaults

# Get arguments

while getopts "v:m:h" name; do
	case $name in
		v)  version=$OPTARG;;
		m)  message=$OPTARG;;
		h)  showhelp $0;;
		[?])  usage $0;;
	esac
done

if [[ ( -z $message ) || ( -z $version ) ]]; then
	echo "A tag message and version must be provided."
else
	context=`git config --local --get versioner.context`
	file=`git config --local --get versioner.file`
	branch=`git config --local --get versioner.branch`
	if [ -z $context ]; then
		echo "Please run \`git config --local --add versioner.context **version context**\`"
	elif [ -z $file ]; then
		echo "Please run \`git config --local --add versioner.file **file with version**\`"
	elif [ -z $branch ]; then
		echo "Please run \`git config --local --add versioner.branch **branch to merge**\`"
	else
		echo -e "\nChecking out dev."
		git checkout $branch
		
		echo -e "\nEditing $file."
		mv $file $file.temp
		sed "s/$context.*/$context$version/g" < $file.temp > $file
		rm $file.temp
		
		echo -e "\nCommitting updated version.\n"
		git add $file
		git commit -m "Version bump to $version."
		
		git checkout master
		
		git merge --no-ff dev
		
		echo -e "\nTagging version $version."
		git tag -a v$version -m "$message"
		
		git checkout $branch
		
		echo -e "\nSUCCESS"
		echo "To push changes run 'push --all' and 'push --tags'."
	fi
fi